{"version":3,"sources":["ls.js","items.js","db.js","Lift.js","Tform.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["LS","SS","ITEMS","label","field","type","db","scale","whichDb","item","i","find","getItem","value","window","localStorage","sessionStorage","items","setItem","isValid","map","includes","Date","toLocaleDateString","DEFAULTS","name","age","liftItem","data","id","uuid","timestamp","now","winNavUa","navigator","userAgent","reduce","acc","curr","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","dynamo","DynamoDB","DocumentClient","Lift","useState","ctext","setCtext","clicks","setClicks","active","setActive","res","setRes","pressed","setPressed","triggered","setTriggered","liftTimer","useRef","maxForce","useEffect","Pressure","set","start","current","change","force","unsupported","only","polyfill","save","timeStamp","push","Promise","resolve","reject","Item","TableName","trigger","lift","pressure","put","err","then","catch","length","all","rand","Math","round","random","setTimeout","c","SAMPLE_SIZE","finally","location","replace","className","style","position","bottom","left","transform","onPointerDown","e","onPointerUp","clearTimeout","to","getDefaultValue","SCALE","SliderScale","tick","key","TimePicker","h","m","hours","setHours","minutes","setMinutes","adjust","which","amount","preventDefault","onClick","defaultValue","Tform","onSubmit","redirect","setRedirect","htmlFor","step","min","max","split","Number","getInput","Data","x","setData","keys","setKeys","scan","Items","k","Object","csv","join","row","fontSize","height","width","App","path","render","rp","forEach","target","trim","scrollTo","Boolean","hostname","match","addEventListener","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"gMAAMA,EAAK,QACLC,EAAK,UAELC,EAAQ,CACZ,CAAEC,MAAO,OAAQC,MAAO,OAAQC,KAAM,SAAUC,GAAIL,GACpD,CAAEE,MAAO,OAAQC,MAAO,OAAQE,GAAIN,GACpC,CAAEG,MAAO,MAAOC,MAAO,MAAOC,KAAM,SAAUC,GAAIN,GAClD,CACEG,MAAO,kCACPC,MAAO,YACPC,KAAM,SACNC,GAAIL,GAEN,CACEE,MAAO,wBACPC,MAAO,OACPC,KAAM,SACNE,MAAO,CAAC,OAAQ,SAAU,QAC1BD,GAAIL,GAEN,CACEE,MAAO,qCACPC,MAAO,QACPC,KAAM,SACNE,MAAO,CAAC,QAAS,SAAU,UAC3BD,GAAIL,GAEN,CACEE,MAAO,0BACPC,MAAO,aACPC,KAAM,OACNC,GAAIL,IAIFO,EAAU,SAAAC,GACd,IAAMC,EAAIR,EAAMS,MAAK,qBAAGP,QAAsBK,KAC9C,OAAOC,GAAKA,EAAEJ,IAGhB,SAASM,EAAQH,GACf,IAAII,EACEP,EAAKE,EAAQC,GAMnB,OALIH,IAAON,EACTa,EAAQC,OAAOC,aAAaH,QAAQH,GAC3BH,IAAOL,IAChBY,EAAQC,OAAOE,eAAeJ,QAAQH,IAEjCI,EAiBM,OACbI,MAAOf,EACPU,UACAM,QAjBF,SAAiBT,EAAMI,GACrB,IAAMP,EAAKE,EAAQC,GACfH,IAAON,EACTc,OAAOC,aAAaG,QAAQT,EAAMI,GACzBP,IAAOL,GAChBa,OAAOE,eAAeE,QAAQT,EAAMI,IAatCM,QATF,WAEE,OADgBjB,EAAMkB,KAAI,oBAAiBR,EAAjB,EAAGR,UAA8BiB,UAAS,IACnDT,EAAQ,WAAY,IAAIU,MAAOC,uB,yDC3D5CC,EAAW,CACfC,KAAM,cACNC,IAAK,eAaA,SAASC,EAASC,GAAO,IAAD,EAKzBA,EAHFC,UAF2B,MAEtBC,cAFsB,IAKzBF,EAFFG,iBAH2B,MAGfT,KAAKU,MAHU,IAKzBJ,EADFK,gBAJ2B,MAIhBnB,OAAOoB,UAAUC,UAJD,EAO7B,OAAO,aACLN,KACAE,YACAE,YAlBiBjC,EAAGiB,MAAMmB,QAAO,SAACC,EAAKC,GAAU,IAC3ClC,EAAUkC,EAAVlC,MACR,OAAO,2BACJA,EAAQJ,EAAGY,QAAQR,IAAUoB,EAASpB,IACpCiC,KAEJ,IASD,GAKKT,G,qBC3BPW,IAAIC,OAAOC,OAAS,YACpBF,IAAIC,OAAOE,YAAc,IAAIH,IAAII,2BAA2B,CACxDC,eAAgB,mDAGpB,IAAMC,EAAS,IAAIN,IAAIO,SAASC,eCDhC,IAAMvB,EACG,QAyMMwB,MA5If,WAAiB,IAAD,EACYC,mBAASzB,GADrB,mBACP0B,EADO,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAEPG,EAFO,KAECC,EAFD,OAGcJ,oBAAS,GAHvB,mBAGPK,EAHO,KAGCC,EAHD,OAIQN,oBAAS,GAJjB,mBAIPO,EAJO,KAIFC,EAJE,OAKgBR,oBAAS,GALzB,mBAKPS,EALO,KAKEC,EALF,OAMoBV,oBAAS,GAN7B,mBAMPW,EANO,KAMIC,EANJ,KAORC,EAAYC,iBAAO,MACnBC,EAAWD,iBAAO,GAExBE,qBAAU,WACRC,IAASC,IAAI,UAAW,CACtBC,MAAO,WACLJ,EAASK,QAAU,GAErBC,OAAQ,SAAAC,GACNP,EAASK,QAAUE,EAAQP,EAASK,QAAUE,EAAQP,EAASK,SAEjEG,YAAa,WACXR,EAASK,SAAW,IAErB,CACDI,KAAM,QACNC,UAAU,MAEX,IAOH,IAAMC,EAAO,WAGX,IAFA,IAAM1D,EAAQ,GACR2D,EAAYtD,KAAKU,MAFN,WAGRtB,GACPO,EAAM4D,KAAK,IAAIC,SAAQ,SAACC,EAASC,GAC/B,IDnFuBC,EAAMC,ECmFvBzE,EAAOkB,EAAS,CAClBiD,YACAO,QAAS/B,EAAO1C,GAAGkE,UACnBQ,KAAMhC,EAAO1C,EAAE,GAAGkE,UAClBS,SAAUjC,EAAO1C,EAAE,GAAG2E,YDvFHJ,ECyFRxE,EDzFcyE,ECyFR,ODxFpB,IAAIJ,SAAQ,SAACC,EAASC,GAC3BnC,EAAOyC,IAAI,CAAEL,OAAMC,cAAa,SAACK,EAAK3D,GAChC2D,EACFP,EAAO,gCAAD,OAAiCE,IAEvCH,WCmF6BS,KAAKT,GAASU,MAAMT,QAR5CtE,EAAI,EAAGA,EAAI0C,EAAOsC,OAAQhF,GAAK,EAAI,EAAnCA,GAWT,OAAOoE,QAAQa,IAAI1E,IA4DrB,OAnDAgD,qBAAU,WACR,IAAM2B,EAnHI,KAmHWC,KAAKC,MAAsB,IAAhBD,KAAKE,UACjCrC,IACFI,EAAUO,QAAU2B,YAAW,WAC7BnC,GAAa,GACbR,GAAU,SAAA4C,GAAC,4BACNA,GADM,CAET,CAAErB,UAAWtD,KAAKU,cAEnB4D,MAEJ,CAAClC,IAEJO,qBAAU,WACciC,KAAlB9C,EAAOsC,SACTjC,GAAO,GApBTkB,IAAOwB,SAAQ,WACbrF,OAAOsF,SAASC,QAAQ,WAsBzB,CAACjD,IAiCCpD,EAAGmB,UAKN,yBAAKmF,UAAU,aACb,yBAAKA,UAAU,iCAAf,yFAKA,6BACEA,UAAS,oBACTC,MAAO,CACLC,SAAU,WACVC,OAAQ,GACRC,KAAM,MACNC,UAAW,oBAGb,yBACE9E,GAAG,SACHyE,UAAS,iBAAY5C,GAAW,UAAvB,YAAoCE,GAAa,YAAjD,YAAgEJ,GAAO,aAChFoD,cAtDY,SAACC,GACf3D,IAAU1B,IAGd+B,GAAU,GACVI,GAAW,KAkDLmD,YA/CU,SAACD,GACjBlD,GAAW,GACNL,GAAUJ,IAAU1B,IAGpBoC,GAIHT,EAAS,QACTE,EAAU,GAAD,mBACJD,GADI,CAEP,CACEwB,UAAWtD,KAAKU,MAChBqD,SAAUrB,EAASK,cARvBlB,EAAS,KACT4D,aAAajD,EAAUO,UAWzBd,GAAU,GACVM,GAAa,GACbmC,YAAW,kBAAM7C,EAAS3B,KAlKhB,SA+LH0B,KAzBA,kBAAC,IAAD,CAAU8D,GAAG,OCxKlBC,EAAkB,SAAC7G,GACvB,MAAc,SAAVA,GACK,IAAIkB,MAAOC,qBAEXvB,EAAGY,QAAQR,IAAU,IAG1B8G,EAAQ,CAAC,OAAQ,SAAU,QAC3BC,EAAc,SAAC,GAAD,QAAG5G,aAAH,MAAW2G,EAAX,SAClB,yBAAKZ,UAAU,qBACZ/F,EAAMa,KAAI,SAAAgG,GAAI,OAAI,yBAAKC,IAAKD,GAAOA,QAIlCE,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAAQ,EACLvE,mBAASsE,GADJ,mBACxBE,EADwB,KACjBC,EADiB,OAEDzE,mBAASuE,GAFR,mBAExBG,EAFwB,KAEfC,EAFe,KAIzBC,EAAS,SAAAC,GAAK,OAAI,SAAAC,GAAM,OAAI,SAAAlB,GAEhC,GADAA,EAAEmB,iBACY,MAAVF,EAAe,CACjB,IAAMjH,EAAQ4G,EAAQM,EAClBlH,GAAS,GAAKA,EAAQ,IACxB6G,EAASD,EAAQM,OAEd,CACL,IAAMlH,EAAQ8G,EAAUI,EACpBlH,GAAS,GAAKA,EAAQ,IACxB+G,EAAWD,EAAUI,OAK3B,OACE,oCACE,yBAAKzB,UAAU,yBACb,6BACE,4BAAQ2B,QAASJ,EAAO,IAAPA,EAAa,GAAIvB,UAAU,eAA5C,KACA,4BAAQ2B,QAASJ,EAAO,IAAPA,CAAY,GAAIvB,UAAU,UAA3C,MAEF,6BAAMmB,EAAN,QAAkBE,EAAlB,QACA,6BACE,4BAAQM,QAASJ,EAAO,IAAPA,EAAa,IAAKvB,UAAU,eAA7C,KACA,4BAAQ2B,QAASJ,EAAO,IAAPA,CAAY,IAAKvB,UAAU,UAA5C,OAGJ,kBAAC,EAAD,CAAa/F,MAAO,CAAC,qBAAsB,0BAC3C,2BAAOF,KAAK,SAASoB,KAAK,aAAayG,aAAY,UAAKT,EAAQE,EAAQ,QAyC/D,SAASQ,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAAY,EACVnF,oBAAS,GADC,mBACnCoF,EADmC,KACzBC,EADyB,KAO1C,OAAID,EACK,kBAAC,IAAD,CAAUrB,GAAG,UAIpB,yBAAKV,UAAU,aACb,6BACE,0BAAM8B,SAXU,SAACvB,GACrBuB,EAASvB,GAAGrB,KAAK8C,KAWVtI,EAAGiB,MAAMG,KAAI,gBAAGjB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAME,EAAvB,EAAuBA,MAAvB,OACZ,yBAAK8G,IAAKjH,GACE,WAATC,GAAqB,2BAAOkI,QAASnI,GAAQD,GArD3C,SAACE,EAAD,GAA6B,IAApBD,EAAmB,EAAnBA,MAAOG,EAAY,EAAZA,MAC/B,OAAQF,GACN,IAAK,SACH,OACE,oCACE,2BACEwB,GAAIzB,EACJqB,KAAMrB,EACN8H,aAAcjB,EAAgB7G,GAC9BkG,UAAU,+CACVkC,KAAK,IACLC,IAAI,IACJC,IAAI,MACJrI,KAAK,UACP,kBAAC,EAAD,CAAaE,MAAOA,KAG1B,IAAK,OACH,IADF,EACe0G,EAAgB7G,GACXuI,MAAM,KAF1B,mBAEOpB,EAFP,KAEUC,EAFV,KAKE,OAFAD,EAAIA,GAAK,EACTC,EAAIA,GAAK,EACF,kBAAC,EAAD,CAAYD,EAAGqB,OAAOrB,GAAIC,EAAmB,GAAhBoB,OAAO,IAAD,OAAKpB,MACjD,IAAK,OACL,QACE,OACE,2BACElB,UAAU,aACVzE,GAAIzB,EACJqB,KAAMrB,EACN8H,aAAcjB,EAAgB7G,GAC9BC,KAAMA,GAAQ,UAuBTwI,CAASxI,EAAM,CAAED,QAAOG,cAG7B,yBAAK+F,UAAU,qBACb,2BAAOA,UAAU,oBAAoBjG,KAAK,SAASQ,MAAM,aCnHtD,SAASiI,EAAT,GAAqB,EAALC,EAAM,IAAD,EACV9F,mBAAS,IADC,mBAC3BrB,EAD2B,KACrBoH,EADqB,OAEV/F,mBAAS,IAFC,mBAE3BgG,EAF2B,KAErBC,EAFqB,KAIlCjF,qBAAU,WHIL,IAAmBiB,KGHZ,OHIL,IAAIJ,SAAQ,SAACC,EAASC,GAC3BnC,EAAOsG,KAAK,CAAEjE,cAAa,SAACK,EAAK3D,GAC3B2D,EACFP,EAAO,4BAEPD,EAAQnD,EAAKwH,cGTC5D,KAAKwD,KACtB,IAEH/E,qBAAU,WACR,IAAMoF,EAAI,GACVzH,EAAKR,KAAI,SAAAX,GAAI,OAAI6I,OAAOL,KAAKxI,GAAMW,KAAI,SAAAiG,GAAG,OAAIgC,EAAEhC,IAAO,QACvD6B,EAAQG,KACP,CAACzH,IAEJ,IAAI2H,EAAG,WAAOD,OAAOL,KAAKA,GAAMO,KAAK,OAA9B,OAQP,OAPA5H,EAAKR,KAAI,SAAAX,GACP,IAAMgJ,EAAM,GAGZ,OAFAH,OAAOL,KAAKA,GAAM7H,KAAI,SAAAiG,GAAG,OAAIoC,EAAI5E,KAAKpE,EAAK4G,OAC3CkC,GAAG,WAAQE,EAAID,KAAK,OAAjB,QACI,KAIP,8BAAUjD,MAAO,CAACmD,SAAU,MAAOC,OAAQ,OAAQC,MAAO,QAAS/I,MAAO0I,ICnB/D,SAASM,IA6BtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,qBACLC,OAAQ,SAAAC,GAAE,OAAI,kBAAClB,EAAD,CAAMkB,GAAIA,OAE1B,kBAAC,IAAD,KACE,yBAAK1D,UAAU,+BAAf,QACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwD,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC3B,EAAD,CAAOC,SA/BF,SAAAvB,GAEf,OADAA,EAAEmB,iBACK,IAAIlD,SAAQ,SAAAC,GACjB/E,EAAGiB,MAAMgJ,SAAQ,YAAgB,IAAb7J,EAAY,EAAZA,MACZS,GAASgG,EAAEqD,OAAO9J,GAAOS,OAAS,IAAIsJ,OAC5CnK,EAAGkB,QAAQd,EAAOS,MAENb,EAAGmB,YAGf6E,YAAW,kBAAMlF,OAAOsJ,SAAS,EAAE,KAAI,KACvCrF,GAAQ,IAEVA,GAAQ,cCpBMsF,QACW,cAA7BvJ,OAAOsF,SAASkE,UAEe,UAA7BxJ,OAAOsF,SAASkE,UAEhBxJ,OAAOsF,SAASkE,SAASC,MACvB,2DCZNzJ,OAAO0J,iBAAiB,eAAe,SAAS3D,GAAKA,EAAEmB,oBAEvDyC,IAASV,OACP,kBAAC,IAAMW,WAAP,KACE,kBAACb,EAAD,OAEFc,SAASC,eAAe,SDuHpB,kBAAmB1I,WACrBA,UAAU2I,cAAcC,MACrBtF,MAAK,SAAAuF,GACJA,EAAaC,gBAEdvF,OAAM,SAAAwF,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.b4fc8c8a.chunk.js","sourcesContent":["const LS = 'local';\nconst SS = 'session';\n\nconst ITEMS = [\n  { label: 'Date', field: 'date', type: 'hidden', db: SS },\n  { label: 'Name', field: 'name', db: LS },\n  { label: 'Age', field: 'age', type: \"number\", db: LS },\n  {\n    label: 'How motivated are you to train?',\n    field: 'motivated',\n    type: 'slider',\n    db: SS\n  },\n  {\n    label: 'How fast do you feel?',\n    field: 'fast',\n    type: 'slider',\n    scale: ['Slow', 'Normal', 'Fast'],\n    db: SS\n  },\n  {\n    label: 'How well did you sleep last night?',\n    field: 'sleep',\n    type: 'slider',\n    scale: ['Worse', 'Normal', 'Better'],\n    db: SS\n  },\n  {\n    label: 'How long did you sleep?',\n    field: 'sleepHours',\n    type: 'time',\n    db: SS,\n  },\n];\n\nconst whichDb = item => {\n  const i = ITEMS.find(({ field }) => field === item);\n  return i && i.db;\n}\n\nfunction getItem(item) {\n  let value;\n  const db = whichDb(item);\n  if (db === LS) {\n    value = window.localStorage.getItem(item);\n  } else if (db === SS) {\n    value = window.sessionStorage.getItem(item);\n  }\n  return value;\n}\n\nfunction setItem(item, value) {\n  const db = whichDb(item);\n  if (db === LS) {\n    window.localStorage.setItem(item, value);\n  } else if (db === SS) {\n    window.sessionStorage.setItem(item, value);\n  }\n}\n\nfunction isValid() {\n  const hasAll = !ITEMS.map(({ field }) => !!getItem(field)).includes(false);\n  return hasAll && getItem('date') === new Date().toLocaleDateString();\n}\n\nexport default {\n  items: ITEMS,\n  getItem,\n  setItem,\n  isValid,\n};\n","import { v4 as uuid } from 'uuid';\nimport LS from './ls';\n\nconst DEFAULTS = {\n  name: 'unspecified',\n  age: 'unspecified',\n};\n\n// const lsData = () => LS.items.map(({ field }) => ({ [field]: LS.getItem(field) || DEFAULTS[field] }));\n\nconst lsData = () => LS.items.reduce((acc, curr) => {\n  const { field } = curr;\n  return {\n    [field]: LS.getItem(field) || DEFAULTS[field],\n    ...acc,\n  }\n}, {});\n\nexport function liftItem(data) {\n  const {\n    id = uuid(),\n    timestamp = Date.now(),\n    winNavUa = window.navigator.userAgent,\n  } = data;\n\n  return {\n    id,\n    timestamp,\n    winNavUa,\n    ...lsData(),\n    ...data,\n  };\n}\n","import AWS from 'aws-sdk';\n// import { COLORS } from '../config';\n\nAWS.config.region = 'us-east-2'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-2:1056edee-e9e2-4c61-8f7e-45d31a5ab8a4',\n});\n\nconst dynamo = new AWS.DynamoDB.DocumentClient();\n// const TableName = 'cyclog';\n\nexport function fetchData(TableName) {\n  return new Promise((resolve, reject) => {\n    dynamo.scan({ TableName }, (err, data) => {\n      if (err) {\n        reject('data cannot be retrieved');\n      } else {\n        resolve(data.Items);\n      }\n    });\n  });\n}\n\nexport function putItemInTable(Item, TableName) {\n  return new Promise((resolve, reject) => {\n    dynamo.put({ Item, TableName }, (err, data) => {\n      if (err) {\n        reject(`Error: data was not saved to ${TableName}`);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\n// export function deleteRide(ride) {\n//   return new Promise((resolve, reject) => {\n//     dynamo.delete({ TableName, Key: { id: ride.id } }, (err, data) => {\n//       if (err) {\n//         reject(err);\n//       } else {\n//         resolve();\n//       }\n//     });\n//   });\n// }\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Pressure from 'pressure';\nimport LS from './ls';\nimport { liftItem } from './items';\nimport { putItemInTable } from './db';\n\nconst DEFAULTS = {\n  ctext: 'Press',\n}\nconst DELAY = 1500;\nconst SAMPLE_SIZE = 5;\n\n// const interval = (t1, t2) => t2 - t1;\n\n// function Results({ clicks, reset }) {\n//   const results = [{\n//     item: 'Date',\n//     value: new Date(clicks[0].timeStamp).toLocaleDateString()\n//   },\n//   {\n//     item: 'Time',\n//     value: new Date(clicks[0].timeStamp).toLocaleTimeString()\n//   }];\n//   const intervals = [];\n//   for (let i = 0; i < SAMPLE_SIZE; i += 1) {\n//     const index = i * 2;\n//     const int = interval(clicks[index].timeStamp, clicks[index+1].timeStamp);\n//     const press = Math.round(clicks[index+1].pressure * 1000)/10;\n//     results.push({\n//       item: `Delay ${i+1}`,\n//       value: `${int}ms [${press}%]`\n//     });\n//     intervals.push(int);\n//   }\n//   results.push({\n//     item: 'Average',\n//     value: `${Math.round(intervals.reduce((a, c) => a+c, 0) / intervals.length)}ms`\n//   })\n//   return (\n//     <div className=\"modal is-active\">\n//       <div className=\"modal-background\"></div>\n//       <div className=\"modal-content has-background-white has-text-centered\">\n//         <div className=\"my-2\"\n//           style={{ maxHeight: '70%', overflow: 'auto' }}\n//         >\n//           <table className=\"table is-size-7\">\n//             <thead>\n//               <tr>\n//                 <th>Event</th>\n//                 <th>Result</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {results.map(r => (\n//                 <tr key={r.item}>\n//                   <td>{r.item}</td>\n//                   <td>{r.value}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//         <div className=\"button is-primary\" onClick={reset}>Restart</div>\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction Lift() {\n  const [ctext, setCtext] = useState(DEFAULTS.ctext);\n  const [clicks, setClicks] = useState([]);\n  const [active, setActive] = useState(false);\n  const [res, setRes] = useState(false);\n  const [pressed, setPressed] = useState(false);\n  const [triggered, setTriggered] = useState(false);\n  const liftTimer = useRef(null);\n  const maxForce = useRef(0);\n\n  useEffect(() => {\n    Pressure.set('#circle', {\n      start: () => {\n        maxForce.current = 0;\n      },\n      change: force => {\n        maxForce.current = force > maxForce.current ? force : maxForce.current;\n      },\n      unsupported: function(){\n        maxForce.current = -1;\n      },\n    }, {\n      only: 'touch',\n      polyfill: false,\n    });\n  }, []);\n\n  // const update = (ctext, active) => {\n  //   setCtext(ctext);\n  //   setActive(active);\n  // }\n\n  const save = () => {\n    const items = [];\n    const timeStamp = Date.now();\n    for (let i = 0; i < clicks.length; i += 2) {\n      items.push(new Promise((resolve, reject) => {\n        const item = liftItem({\n            timeStamp,\n            trigger: clicks[i].timeStamp,\n            lift: clicks[i+1].timeStamp,\n            pressure: clicks[i+1].pressure,\n          });\n        putItemInTable(item, 'lift').then(resolve).catch(reject);\n      }));\n    }\n    return Promise.all(items);\n  }\n\n  const reset = () => {\n    save().finally(() => {\n      window.location.replace('#')\n    });\n  }\n\n  useEffect(() => {\n    const rand = DELAY + Math.round(Math.random() * 250);\n    if (pressed) {\n      liftTimer.current = setTimeout(() => {\n        setTriggered(true);\n        setClicks(c => [\n          ...c,\n          { timeStamp: Date.now() },\n        ]);\n      }, rand);\n    }\n  }, [pressed]);\n\n  useEffect(() => {\n    if (clicks.length === SAMPLE_SIZE * 2) {\n      setRes(true);\n      reset();\n    }\n  }, [clicks]);\n\n  const pointerDown = (e) => {\n    if (ctext !== DEFAULTS.ctext) {\n      return;\n    }\n    setActive(true);\n    setPressed(true);\n  }\n\n  const pointerUp = (e) => {\n    setPressed(false);\n    if (!active || ctext !== DEFAULTS.ctext) {\n      return;\n    }\n    if (!triggered) {\n      setCtext('!');\n      clearTimeout(liftTimer.current);\n    } else {\n      setCtext('Good');\n      setClicks([\n        ...clicks,\n        {\n          timeStamp: Date.now(),\n          pressure: maxForce.current,\n        },\n      ]);\n    }\n    setActive(false);\n    setTriggered(false);\n    setTimeout(() => setCtext(DEFAULTS.ctext), DELAY);\n  }\n\n  if (!LS.isValid()) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"px-4 py-4\">\n      <div className=\"has-text-weight-semibold mb-4\">\n        Press with your thumb.\n        When the border turns red, lift your thumb.\n        Repeat five times.\n      </div>\n      <section\n        className={`section py-0 lift`}\n        style={{\n          position: 'absolute',\n          bottom: 20,\n          left: '50%',\n          transform: 'translate(-50%)',\n        }}\n      >\n        <div\n          id=\"circle\"\n          className={`circle ${pressed && 'pressed'} ${triggered && 'triggered'} ${res && 'is-hidden'}`}\n          onPointerDown={pointerDown}\n          onPointerUp={pointerUp}\n        >\n          {ctext}\n        </div>\n      </section>\n    </div>\n  );\n}\n// {res && <Results clicks={clicks} reset={reset} />}\n\nexport default Lift;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport LS from './ls';\n\n// const days = [\n//   'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n// ];\n\nconst getDefaultValue = (field) => {\n  if (field === 'date')\n    return new Date().toLocaleDateString();\n  else\n    return LS.getItem(field) || '';\n}\n\nconst SCALE = ['Less', 'Normal', 'More'];\nconst SliderScale = ({ scale = SCALE }) => (\n  <div className=\"slider-scale mb-4\">\n    {scale.map(tick => <div key={tick}>{tick}</div>)}\n  </div>\n);\n\nconst TimePicker = ({ h, m }) => {\n  const [hours, setHours] = useState(h);\n  const [minutes, setMinutes] = useState(m);\n\n  const adjust = which => amount => e => {\n    e.preventDefault();\n    if (which === 'h') {\n      const value = hours + amount;\n      if (value >= 0 && value < 25) {\n        setHours(hours + amount);\n      }\n    } else {\n      const value = minutes + amount;\n      if (value >= 0 && value < 60) {\n        setMinutes(minutes + amount);\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className=\"time-picker mt-4 mb-4\">\n        <div>\n          <button onClick={adjust('h')(-1)} className=\"button mr-4\">-</button>\n          <button onClick={adjust('h')(1)} className=\"button\">+</button>\n        </div>\n        <div>{hours} hrs {minutes} min</div>\n        <div>\n          <button onClick={adjust('m')(-15)} className=\"button mr-4\">-</button>\n          <button onClick={adjust('m')(15)} className=\"button\">+</button>\n        </div>\n      </div>\n      <SliderScale scale={['subtract/add hours', 'subtract/add minutes']} />\n      <input type=\"hidden\" name=\"sleepHours\" defaultValue={`${hours + minutes/60}`} />\n    </>\n  );\n}\n\nconst getInput = (type, { field, scale }) => {\n  switch (type) {\n    case 'slider':\n      return (\n        <>\n          <input\n            id={field}\n            name={field}\n            defaultValue={getDefaultValue(field)}\n            className=\"slider is-warning is-fullwidth is-large mt-2\"\n            step=\"1\"\n            min=\"1\"\n            max=\"100\"\n            type=\"range\"/>\n          <SliderScale scale={scale} />\n        </>\n      );\n    case 'time':\n      const time = getDefaultValue(field);\n      let [h, m] = time.split('.');\n      h = h || 8;\n      m = m || 0;\n      return <TimePicker h={Number(h)} m={Number(`.${m}`)*60} />;\n    case 'text':\n    default:\n      return (\n        <input\n          className=\"input mb-4\"\n          id={field}\n          name={field}\n          defaultValue={getDefaultValue(field)}\n          type={type || 'text'}/>\n      );\n  }\n}\n\nexport default function Tform({ onSubmit }) {\n  const [redirect, setRedirect] = useState(false);\n\n  const submitHandler = (e) => {\n    onSubmit(e).then(setRedirect);\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/lift\" />;\n  }\n\n  return (\n    <div className=\"px-4 py-4\">\n      <div>\n        <form onSubmit={submitHandler}>\n          {LS.items.map(({ label, field, type, scale }) => (\n            <div key={field}>\n              {type !== 'hidden' && <label htmlFor={field}>{label}</label>}\n              {getInput(type, { field, scale })}\n            </div>\n          ))}\n          <div className=\"has-text-centered\">\n            <input className=\"button is-primary\" type=\"submit\" value=\"Next\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n// {\n//   LS.items.map(({ field }) =>\n//   <div key={field}>{field}: {LS.getItem(field)}</div>\n// )\n// }\n","import React, { useState, useEffect } from 'react';\nimport { fetchData } from './db';\n\nexport default function Data({ x }) {\n  const [data, setData] = useState([]);\n  const [keys, setKeys] = useState({});\n\n  useEffect(() => {\n    fetchData('lift').then(setData);\n  }, []);\n\n  useEffect(() => {\n    const k = {};\n    data.map(item => Object.keys(item).map(key => k[key] = true));\n    setKeys(k);\n  }, [data]);\n\n  let csv = `\"${Object.keys(keys).join('\",\"')}\"\\n`;\n  data.map(item => {\n    const row = [];\n    Object.keys(keys).map(key => row.push(item[key]));\n    csv += `\"${row.join('\",\"')}\"\\n`;\n    return true;\n  })\n\n  return (\n    <textarea style={{fontSize: '6px', height: '99vh', width: '99vw'}} value={csv} />\n  )\n}\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport LS from './ls';\nimport Lift from './Lift';\nimport Tform from './Tform';\nimport Data from './Data';\n\nexport default function App() {\n  // const [isValid, setIsValid] = useState(false);\n\n  // useEffect(() => {\n  //   setIsValid(v => LS.isValid());\n  //   window.setInterval(() => {\n  //     if (!LS.isValid()) {\n  //       setIsValid(false);\n  //     }\n  //   }, 60000);\n  // }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    return new Promise(resolve => {\n      LS.items.forEach(({ field }) => {\n        const value = (e.target[field].value || '').trim();\n        LS.setItem(field, value);\n      });\n      const valid = LS.isValid();\n      // setIsValid(valid);\n      if (valid) {\n        setTimeout(() => window.scrollTo(0,0), 500);\n        resolve(true);\n      }\n      resolve(false);\n    });\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/data/:table(lift)\"\n          render={rp => <Data rp={rp} />}\n        />\n        <Route>\n          <div className=\"p-2 m-0 has-background-link\">&nbsp;</div>\n          <Switch>\n            <Route path=\"/lift\">\n              <Lift />\n            </Route>\n            <Route>\n              <Tform onSubmit={onSubmit} />\n            </Route>\n          </Switch>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n// <nav className=\"navbar has-background-info-dark\" role=\"navigation\" aria-label=\"main navigation\">\n//   <div className=\"navbar-brand\">\n//     <Link className=\"navbar-item is-size-7 has-text-white\" to=\"/user\">\n//     {\n//       [\n//         new Date().toLocaleDateString(),\n//         LS.getItem('name'),\n//       ].map(t => t ? <React.Fragment key={t}>{t}<br /></React.Fragment> : null)\n//     }\n//     </Link>\n//     {isValid && <Link className=\"navbar-item has-text-white\" to=\"/lift\">Lift</Link>}\n//     {false && isValid && <Link className=\"navbar-item has-text-white\" to=\"/tap\">Tap</Link>}\n//   </div>\n// </nav>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener(\"contextmenu\", function(e) { e.preventDefault(); })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}