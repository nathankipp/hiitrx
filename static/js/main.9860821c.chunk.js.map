{"version":3,"sources":["ls.js","items.js","db.js","Lift.js","Tap.js","Tform.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["LS","SS","ITEMS","label","field","type","db","scale","whichDb","item","i","find","getItem","value","window","localStorage","sessionStorage","items","setItem","isValid","hasAll","map","includes","console","log","Date","toLocaleDateString","DEFAULTS","name","age","liftItem","data","id","uuid","timestamp","now","winNavUa","navigator","userAgent","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","dynamo","DynamoDB","DocumentClient","Results","t1","clicks","reset","results","timeStamp","toLocaleTimeString","intervals","index","int","press","Math","round","pressure","push","reduce","a","c","length","className","style","maxHeight","overflow","r","key","onClick","Lift","useState","ctext","setCtext","setClicks","active","setActive","res","setRes","pressed","setPressed","triggered","setTriggered","liftTimer","useRef","maxForce","useEffect","Pressure","set","start","current","change","force","unsupported","only","polyfill","save","Promise","resolve","reject","Item","TableName","trigger","lift","put","err","then","catch","all","rand","random","setTimeout","SAMPLE_SIZE","position","bottom","left","transform","onPointerDown","e","onPointerUp","clearTimeout","finally","update","forEach","use","Tap","days","getDefaultValue","SCALE","SliderScale","low","medium","high","Tform","onSubmit","redirect","setRedirect","to","getDay","redir","htmlFor","defaultValue","step","min","max","Data","x","setData","keys","setKeys","scan","Items","k","Object","csv","join","row","fontSize","height","width","App","setIsValid","v","setInterval","preventDefault","target","trim","valid","scrollTo","path","render","rp","role","aria-label","t","Fragment","Boolean","location","hostname","match","addEventListener","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9860821c.chunk.js","sourcesContent":["const LS = 'local';\nconst SS = 'session';\n\nconst ITEMS = [\n  { label: 'Date', field: 'date', type: 'hidden', db: SS },\n  { label: 'Name', field: 'name', db: LS },\n  { label: 'Age', field: 'age', type: \"number\", db: LS },\n  {\n    label: 'How motivated are you to train?',\n    field: 'motivated',\n    type: 'slider',\n    db: SS\n  },\n  {\n    label: 'How fast do you feel?',\n    field: 'fast',\n    type: 'slider',\n    scale: ['Slow', 'Normal', 'Fast'],\n    db: SS\n  },\n  {\n    label: 'How well did you sleep last night?',\n    field: 'sleep',\n    type: 'slider',\n    scale: ['Worse', 'Normal', 'Better'],\n    db: SS\n  },\n  {\n    label: 'Hours of sleep',\n    field: 'sleepHours',\n    type: 'number',\n    db: SS\n  },\n];\n\nconst whichDb = item => {\n  const i = ITEMS.find(({ field }) => field === item);\n  return i && i.db;\n}\n\nfunction getItem(item) {\n  let value;\n  const db = whichDb(item);\n  if (db === LS) {\n    value = window.localStorage.getItem(item);\n  } else if (db === SS) {\n    value = window.sessionStorage.getItem(item);\n  }\n  return value;\n}\n\nfunction setItem(item, value) {\n  const db = whichDb(item);\n  if (db === LS) {\n    window.localStorage.setItem(item, value);\n  } else if (db === SS) {\n    window.sessionStorage.setItem(item, value);\n  }\n}\n\nfunction isValid() {\n  const hasAll = !ITEMS.map(({ field }) => !!getItem(field)).includes(false);\n  console.log(hasAll);\n  return hasAll && getItem('date') === new Date().toLocaleDateString();\n}\n\nexport default {\n  items: ITEMS,\n  getItem,\n  setItem,\n  isValid,\n};\n","import { v4 as uuid } from 'uuid';\nimport LS from './ls';\n\nconst DEFAULTS = {\n  name: 'unspecified',\n  age: 'unspecified',\n};\n\nconst lsData = () => LS.items.map(({ field }) => ({ [field]: LS.getItem(field) || DEFAULTS[field] }));\n\nexport function liftItem(data) {\n  const {\n    id = uuid(),\n    timestamp = Date.now(),\n    winNavUa = window.navigator.userAgent,\n  } = data;\n\n  return {\n    id,\n    timestamp,\n    winNavUa,\n    ...lsData(),\n    ...data,\n  };\n}\n","import AWS from 'aws-sdk';\n// import { COLORS } from '../config';\n\nAWS.config.region = 'us-east-2'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-2:1056edee-e9e2-4c61-8f7e-45d31a5ab8a4',\n});\n\nconst dynamo = new AWS.DynamoDB.DocumentClient();\n// const TableName = 'cyclog';\n\nexport function fetchData(TableName) {\n  return new Promise((resolve, reject) => {\n    dynamo.scan({ TableName }, (err, data) => {\n      if (err) {\n        reject('data cannot be retrieved');\n      } else {\n        resolve(data.Items);\n      }\n    });\n  });\n}\n\nexport function putItemInTable(Item, TableName) {\n  return new Promise((resolve, reject) => {\n    dynamo.put({ Item, TableName }, (err, data) => {\n      if (err) {\n        reject(`Error: data was not saved to ${TableName}`);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\n// export function deleteRide(ride) {\n//   return new Promise((resolve, reject) => {\n//     dynamo.delete({ TableName, Key: { id: ride.id } }, (err, data) => {\n//       if (err) {\n//         reject(err);\n//       } else {\n//         resolve();\n//       }\n//     });\n//   });\n// }\n","import React, { useState, useRef, useEffect } from 'react';\nimport Pressure from 'pressure';\n// import './Lift.css';\nimport { liftItem } from './items';\nimport { putItemInTable } from './db';\n\nconst DEFAULTS = {\n  ctext: 'Press',\n}\nconst DELAY = 1500;\nconst SAMPLE_SIZE = 5;\n\nconst interval = (t1, t2) => t2 - t1;\n\nfunction Results({ clicks, reset }) {\n  const results = [{\n    item: 'Date',\n    value: new Date(clicks[0].timeStamp).toLocaleDateString()\n  },\n  {\n    item: 'Time',\n    value: new Date(clicks[0].timeStamp).toLocaleTimeString()\n  }];\n  const intervals = [];\n  for (let i = 0; i < SAMPLE_SIZE; i += 1) {\n    const index = i * 2;\n    const int = interval(clicks[index].timeStamp, clicks[index+1].timeStamp);\n    const press = Math.round(clicks[index+1].pressure * 1000)/10;\n    results.push({\n      item: `Delay ${i+1}`,\n      value: `${int}ms [${press}%]`\n    });\n    intervals.push(int);\n  }\n  results.push({\n    item: 'Average',\n    value: `${Math.round(intervals.reduce((a, c) => a+c, 0) / intervals.length)}ms`\n  })\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-content has-background-white has-text-centered\">\n        <div className=\"my-2\"\n          style={{ maxHeight: '70%', overflow: 'auto' }}\n        >\n          <table className=\"table is-size-7\">\n            <thead>\n              <tr>\n                <th>Event</th>\n                <th>Result</th>\n              </tr>\n            </thead>\n            <tbody>\n              {results.map(r => (\n                <tr key={r.item}>\n                  <td>{r.item}</td>\n                  <td>{r.value}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"button is-primary\" onClick={reset}>Restart</div>\n      </div>\n    </div>\n  );\n}\n\nfunction Lift() {\n  const [ctext, setCtext] = useState(DEFAULTS.ctext);\n  const [clicks, setClicks] = useState([]);\n  const [active, setActive] = useState(false);\n  const [res, setRes] = useState(false);\n  const [pressed, setPressed] = useState(false);\n  const [triggered, setTriggered] = useState(false);\n  const liftTimer = useRef(null);\n  const maxForce = useRef(0);\n\n  useEffect(() => {\n    Pressure.set('#circle', {\n      start: () => {\n        maxForce.current = 0;\n      },\n      change: force => {\n        maxForce.current = force > maxForce.current ? force : maxForce.current;\n      },\n      unsupported: function(){\n        maxForce.current = -1;\n      },\n    }, {\n      only: 'touch',\n      polyfill: false,\n    });\n  }, []);\n\n  const update = (ctext, active) => {\n    setCtext(ctext);\n    setActive(active);\n  }\n\n  const save = () => {\n    const items = [];\n    const timeStamp = Date.now();\n    for (let i = 0; i < clicks.length; i += 2) {\n      items.push(new Promise((resolve, reject) => {\n        const item = liftItem({\n            timeStamp,\n            trigger: clicks[i].timeStamp,\n            lift: clicks[i+1].timeStamp,\n            pressure: clicks[i+1].pressure,\n          });\n        putItemInTable(item, 'lift').then(resolve).catch(reject);\n      }));\n    }\n    return Promise.all(items);\n  }\n\n  const reset = () => {\n    save().finally(() => {\n      setRes(false);\n      setClicks([]);\n      update(DEFAULTS.ctext, false);\n    });\n  }\n\n  useEffect(() => {\n    const rand = DELAY + Math.round(Math.random() * 250);\n    if (pressed) {\n      liftTimer.current = setTimeout(() => {\n        setTriggered(true);\n        setClicks(c => [\n          ...c,\n          { timeStamp: Date.now() },\n        ]);\n      }, rand);\n    }\n  }, [pressed]);\n\n  useEffect(() => {\n    if (clicks.length === SAMPLE_SIZE * 2) {\n      setRes(true);\n    }\n  }, [clicks]);\n\n  const pointerDown = (e) => {\n    if (ctext !== DEFAULTS.ctext) {\n      return;\n    }\n    setActive(true);\n    setPressed(true);\n  }\n\n  const pointerUp = (e) => {\n    setPressed(false);\n    if (!active || ctext !== DEFAULTS.ctext) {\n      return;\n    }\n    if (!triggered) {\n      setCtext('!');\n      clearTimeout(liftTimer.current);\n    } else {\n      setCtext('Good');\n      setClicks([\n        ...clicks,\n        {\n          timeStamp: Date.now(),\n          pressure: maxForce.current,\n        },\n      ]);\n    }\n    setActive(false);\n    setTriggered(false);\n    setTimeout(() => setCtext(DEFAULTS.ctext), DELAY);\n  }\n\n  return (\n    <div className=\"px-4 py-4\">\n      <div className=\"has-text-weight-semibold mb-4\">\n        Press with your thumb.\n        When the border turns red, lift your thumb.\n        Repeat five times.\n      </div>\n      <section\n        className={`section py-0 lift`}\n        style={{\n          position: 'absolute',\n          bottom: 20,\n          left: '50%',\n          transform: 'translate(-50%)',\n        }}\n      >\n        <div\n          id=\"circle\"\n          className={`circle ${pressed && 'pressed'} ${triggered && 'triggered'}`}\n          onPointerDown={pointerDown}\n          onPointerUp={pointerUp}\n        >\n          {ctext}\n        </div>\n      </section>\n      {res && <Results clicks={clicks} reset={reset} />}\n    </div>\n  );\n}\n\nexport default Lift;\n","import React, { useState, useEffect } from 'react';\nimport './Tap.css';\n\nconst DELAY = 1500;\n\nconst interval = (t1, t2) => t2 - t1;\n\nfunction Results({ clicks, reset }) {\n  const results = [{\n    item: 'Date',\n    value: new Date(clicks[0]).toLocaleDateString()\n  },\n  {\n    item: 'Time',\n    value: new Date(clicks[0]).toLocaleTimeString()\n  }];\n  const intervals = [];\n  ['2-Tap Int 1','3-Tap Int 1','3-Tap Int 2','4-Tap Int 1','4-Tap Int 2','4-Tap Int 3'].forEach((item, i) => {\n    const use = i === 0\n      ? [1, 2] : i < 3\n      ? [i+2, i+3]\n      : [i+3, i+4];\n    const int = interval(clicks[use[0]], clicks[use[1]]);\n    results.push({\n      item,\n      value: `${int}ms`\n    });\n    intervals.push(int);\n  });\n  results.push({\n    item: 'Average',\n    value: `${Math.round(intervals.reduce((a, c) => a+c, 0) / intervals.length)}ms`\n  })\n  return (\n    <div className=\"overlay\">\n      <div className=\"modal\">\n        <table>\n          <thead>\n            <tr>\n              <th>Event</th>\n              <th>Result</th>\n            </tr>\n          </thead>\n          <tbody>\n            {results.map(r => (\n              <tr key={r.item}>\n                <td>{r.item}</td>\n                <td>{r.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"reset\" onClick={reset}>Restart</div>\n      </div>\n    </div>\n  );\n}\n\nfunction Tap() {\n  const [ctext, setCtext] = useState('Start');\n  const [clicks, setClicks] = useState([]);\n  const [active, setActive] = useState(false);\n  const [res, setRes] = useState(false);\n\n  const update = (ctext, active) => {\n    setCtext(ctext);\n    setActive(active);\n  }\n\n  const reset = () => {\n    setClicks([]);\n    update('Start', false);\n    setRes(false);\n  }\n\n  useEffect(() => {\n    switch(clicks.length) {\n      case 1: {\n        setTimeout(() => {\n          update('2', true);\n        }, 500);\n        break;\n      }\n      case 3: {\n        update('Good', false);\n        setTimeout(() => {\n          update('3', true);\n        }, DELAY);\n        break;\n      }\n      case 6: {\n        update('Good', false);\n        setTimeout(() => {\n          update('4', true);\n        }, DELAY);\n        break;\n      }\n      case 10: {\n        update('Done', false);\n        setTimeout(() => {\n          setRes(true);\n        }, DELAY);\n        break;\n      }\n      default: break;\n    }\n  }, [clicks]);\n\n  const click = e => {\n    if (clicks.length === 0) {\n      setCtext('');\n    } else if (!active) {\n      return;\n    }\n    setClicks([...clicks, Date.now()]);\n  }\n\n  return (\n    <>\n      <div className=\"header\">\n        Tap Start.  When a number appears, tap the circle that many times as quickly as you can.  Use only your thumb.\n      </div>\n      <div className=\"tap\">\n        <div\n          className={`circle ${active && 'active'}`}\n          onClick={click}\n        >\n          {ctext}\n        </div>\n      </div>\n      {res && <Results clicks={clicks} reset={reset} />}\n    </>\n  );\n}\n\nexport default Tap;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import './Tform.scss';\nimport LS from './ls';\n\nconst days = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n];\n\nconst getDefaultValue = (field) => {\n  if (field === 'date')\n    return new Date().toLocaleDateString();\n  else\n    return LS.getItem(field) || '';\n}\n\nconst SCALE = ['Less', 'Normal', 'More'];\nconst SliderScale = ({ scale: [ low, medium, high ] = SCALE }) => (\n  <div className=\"slider-scale mb-4\">\n    <div>{low}</div>\n    <div>{medium}</div>\n    <div>{high}</div>\n  </div>\n);\n\nexport default function Tform({ onSubmit }) {\n  const [redirect, setRedirect] = useState(false);\n\n  const submitHandler = (e) => {\n    const redir = onSubmit(e);\n    setRedirect(redir);\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/lift\" />;\n  }\n\n  return (\n    <div className=\"px-4 py-4\">\n      <div className=\"has-text-weight-semibold mb-4\">\n        My {days[new Date().getDay()]} Status\n      </div>\n      <div>\n        <form onSubmit={submitHandler}>\n          {LS.items.map(({ label, field, type, scale }) => (\n            <div key={field}>\n              {type !== 'hidden' && <label htmlFor={field}>{label}</label>}\n              {type === 'slider'\n              ? <>\n                  <input\n                    id={field}\n                    name={field}\n                    defaultValue={getDefaultValue(field)}\n                    className=\"slider is-warning is-fullwidth is-large\"\n                    step=\"1\"\n                    min=\"1\"\n                    max=\"100\"\n                    type=\"range\"/>\n                  <SliderScale scale={scale} />\n                </>\n              : <input\n                  className=\"input mb-4\"\n                  id={field}\n                  name={field}\n                  defaultValue={getDefaultValue(field)}\n                  type={type || 'text'}/>\n              }\n            </div>\n          ))}\n          <div>\n            <input className=\"button is-primary\" type=\"submit\" value=\"Continue\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n// {\n//   LS.items.map(({ field }) =>\n//   <div key={field}>{field}: {LS.getItem(field)}</div>\n// )\n// }\n","import React, { useState, useEffect } from 'react';\nimport { fetchData } from './db';\n\nexport default function Data({ x }) {\n  const [data, setData] = useState([]);\n  const [keys, setKeys] = useState({});\n\n  useEffect(() => {\n    fetchData('lift').then(setData);\n  }, []);\n\n  useEffect(() => {\n    const k = {};\n    data.map(item => Object.keys(item).map(key => k[key] = true));\n    setKeys(k);\n  }, [data]);\n\n  let csv = `\"${Object.keys(keys).join('\",\"')}\"\\n`;\n  data.map(item => {\n    const row = [];\n    Object.keys(keys).map(key => {\n      row.push(item[key]);\n    });\n    csv += `\"${row.join('\",\"')}\"\\n`;\n  })\n\n  return (\n    <textarea style={{fontSize: '6px', height: '99vh', width: '99vw'}} value={csv} />\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Link, Switch, Route, Redirect } from 'react-router-dom';\nimport LS from './ls';\nimport Lift from './Lift';\nimport Tap from './Tap';\nimport Tform from './Tform';\nimport Data from './Data';\n\nexport default function App() {\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    setIsValid(v => LS.isValid());\n    window.setInterval(() => {\n      if (!LS.isValid()) {\n        setIsValid(false);\n      }\n    }, 60000);\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    LS.items.forEach(({ field }) => {\n      const value = (e.target[field].value || '').trim();\n      LS.setItem(field, value);\n    });\n    const valid = LS.isValid();\n    setIsValid(valid);\n    if (valid) {\n      setTimeout(() => window.scrollTo(0,0), 500);\n      return true;\n    }\n    return;\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/data/:table(lift|tap)\"\n          render={rp => <Data rp={rp} />}\n        />\n        <Route>\n          <nav className=\"navbar has-background-info-dark\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n              <Link className=\"navbar-item is-size-7 has-text-white\" to=\"/user\">\n              {\n                [\n                  new Date().toLocaleDateString(),\n                  LS.getItem('name'),\n                ].map(t => t ? <React.Fragment key={t}>{t}<br /></React.Fragment> : null)\n              }\n              </Link>\n              {isValid && <Link className=\"navbar-item has-text-white\" to=\"/lift\">Lift</Link>}\n              {false && isValid && <Link className=\"navbar-item has-text-white\" to=\"/tap\">Tap</Link>}\n            </div>\n          </nav>\n          {isValid\n            ? <Switch>\n                <Route path=\"/lift\">\n                  <Lift />\n                </Route>\n                // <Route path=\"/tap\">\n                //   {isValid ? <Tap /> : <Redirect to=\"/user\" />}\n                // </Route>\n                <Route>\n                  <Tform onSubmit={onSubmit} />\n                </Route>\n              </Switch>\n            : <Tform onSubmit={onSubmit} />\n          }\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener(\"contextmenu\", function(e) { e.preventDefault(); })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}