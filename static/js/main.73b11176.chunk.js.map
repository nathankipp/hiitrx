{"version":3,"sources":["ls.js","db.js","Data.js","Stepper.js","Tform.js","items.js","Lift.js","table.js","Results.js","App.js","serviceWorker.js","index.js"],"names":["LS","SS","ITEMS","label","field","type","db","scale","whichDb","item","i","find","getItem","value","window","localStorage","sessionStorage","items","setItem","isValid","map","includes","Date","toLocaleDateString","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","dynamo","DynamoDB","DocumentClient","Data","x","useState","data","setData","keys","setKeys","useEffect","TableName","Promise","resolve","reject","scan","err","Items","then","k","Object","key","csv","join","row","push","style","fontSize","height","width","withRouter","path","pathname","location","classNames","step","className","icon","faSmile","faDotCircle","faCheckCircle","getDefaultValue","SCALE","SliderScale","tick","TimePicker","h","m","hours","setHours","minutes","setMinutes","adjust","which","amount","e","preventDefault","onClick","name","defaultValue","Tform","onSubmit","redirect","setRedirect","to","id","htmlFor","min","max","split","Number","getInput","DEFAULTS","age","liftItem","uuid","timestamp","now","winNavUa","navigator","userAgent","reduce","acc","curr","history","ctext","setCtext","clicks","setClicks","active","setActive","res","setRes","pressed","setPressed","triggered","setTriggered","liftTimer","useRef","maxForce","Pressure","set","start","current","change","force","unsupported","only","polyfill","save","timeStamp","Item","trigger","lift","pressure","put","catch","length","all","rand","Math","round","random","setTimeout","c","SAMPLE_SIZE","finally","speed","cur","idx","arr","position","bottom","left","transform","spin","size","faSpinner","onPointerDown","onPointerUp","clearTimeout","build","motivated","fast","sleep","sleepHours","search","readiness","table","sort","pop","shift","avgSpeed","App","render","rp","forEach","target","trim","scrollTo","Boolean","hostname","match","addEventListener","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.73b11176.chunk.js","sourcesContent":["const LS = 'local';\nconst SS = 'session';\n\nconst ITEMS = [\n  { label: 'Date', field: 'date', type: 'hidden', db: SS },\n  { label: 'Name', field: 'name', db: LS },\n  { label: 'Age', field: 'age', type: \"number\", db: LS },\n  {\n    label: 'How motivated are you to train?',\n    field: 'motivated',\n    type: 'slider',\n    db: SS\n  },\n  {\n    label: 'How fast do you feel?',\n    field: 'fast',\n    type: 'slider',\n    scale: ['Slow', 'Normal', 'Fast'],\n    db: SS\n  },\n  {\n    label: 'How well did you sleep last night?',\n    field: 'sleep',\n    type: 'slider',\n    scale: ['Worse', 'Normal', 'Better'],\n    db: SS\n  },\n  {\n    label: 'How long did you sleep?',\n    field: 'sleepHours',\n    type: 'time',\n    db: SS,\n  },\n];\n\nconst whichDb = item => {\n  const i = ITEMS.find(({ field }) => field === item);\n  return i && i.db;\n}\n\nfunction getItem(item) {\n  let value;\n  const db = whichDb(item);\n  if (db === LS) {\n    value = window.localStorage.getItem(item);\n  } else if (db === SS) {\n    value = window.sessionStorage.getItem(item);\n  }\n  return value;\n}\n\nfunction setItem(item, value) {\n  const db = whichDb(item);\n  if (db === LS) {\n    window.localStorage.setItem(item, value);\n  } else if (db === SS) {\n    window.sessionStorage.setItem(item, value);\n  }\n}\n\nfunction isValid() {\n  const hasAll = !ITEMS.map(({ field }) => !!getItem(field)).includes(false);\n  return hasAll && getItem('date') === new Date().toLocaleDateString();\n}\n\nexport default {\n  items: ITEMS,\n  getItem,\n  setItem,\n  isValid,\n};\n","import AWS from 'aws-sdk';\n// import { COLORS } from '../config';\n\nAWS.config.region = 'us-east-2'; // Region\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: 'us-east-2:1056edee-e9e2-4c61-8f7e-45d31a5ab8a4',\n});\n\nconst dynamo = new AWS.DynamoDB.DocumentClient();\n// const TableName = 'cyclog';\n\nexport function fetchData(TableName) {\n  return new Promise((resolve, reject) => {\n    dynamo.scan({ TableName }, (err, data) => {\n      if (err) {\n        reject('data cannot be retrieved');\n      } else {\n        resolve(data.Items);\n      }\n    });\n  });\n}\n\nexport function putItemInTable(Item, TableName) {\n  return new Promise((resolve, reject) => {\n    dynamo.put({ Item, TableName }, (err, data) => {\n      if (err) {\n        reject(`Error: data was not saved to ${TableName}`);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\n// export function deleteRide(ride) {\n//   return new Promise((resolve, reject) => {\n//     dynamo.delete({ TableName, Key: { id: ride.id } }, (err, data) => {\n//       if (err) {\n//         reject(err);\n//       } else {\n//         resolve();\n//       }\n//     });\n//   });\n// }\n","import React, { useState, useEffect } from 'react';\nimport { fetchData } from './db';\n\nexport default function Data({ x }) {\n  const [data, setData] = useState([]);\n  const [keys, setKeys] = useState({});\n\n  useEffect(() => {\n    fetchData('lift').then(setData);\n  }, []);\n\n  useEffect(() => {\n    const k = {};\n    data.map(item => Object.keys(item).map(key => k[key] = true));\n    setKeys(k);\n  }, [data]);\n\n  let csv = `\"${Object.keys(keys).join('\",\"')}\"\\n`;\n  data.map(item => {\n    const row = [];\n    Object.keys(keys).map(key => row.push(item[key]));\n    csv += `\"${row.join('\",\"')}\"\\n`;\n    return true;\n  })\n\n  return (\n    <textarea style={{fontSize: '6px', height: '99vh', width: '99vw'}} value={csv} />\n  )\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSmile, faDotCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst progress = path => step => {\n  let className = \"step-item is-success\";\n  const isToday = path === '/today';\n  const isLift = path === '/lift';\n  const isResults = path === '/results';\n\n  if (isToday && step === 0) {\n    className += ' is-active';\n  }\n  if (isLift) {\n    if (step === 0) className += ' is-completed';\n    if (step === 1) className += ' is-active';\n  }\n  if (isResults) {\n    if (step < 2) className += ' is-completed';\n    else className += ' is-active';\n  }\n\n  return className;\n}\n\nfunction Stepper({ location: { pathname }}) {\n  const classNames = progress(pathname);\n  return (\n    <>\n      <div className=\"tri-tap is-pulled-left ml-4\"><b>tri-tap</b></div>\n      <div className=\"steps is-small mt-1 mb-0 ml-6\">\n        <div className={classNames(0)}>\n          <div className=\"step-marker\"><FontAwesomeIcon icon={faSmile} /></div>\n        </div>\n        <div className={classNames(1)}>\n          <div className=\"step-marker\"><FontAwesomeIcon icon={faDotCircle} /></div>\n        </div>\n        <div className={classNames(2)}>\n          <div className=\"step-marker\"><FontAwesomeIcon icon={faCheckCircle} /></div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(Stepper);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport LS from './ls';\n\n// const days = [\n//   'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n// ];\n\nconst getDefaultValue = (field) => {\n  if (field === 'date')\n    return new Date().toLocaleDateString();\n  else\n    return LS.getItem(field) || '';\n}\n\nconst SCALE = ['Less', 'Normal', 'More'];\nconst SliderScale = ({ scale = SCALE }) => (\n  <div className=\"slider-scale mb-4\">\n    {scale.map(tick => <div key={tick}>{tick}</div>)}\n  </div>\n);\n\nconst TimePicker = ({ h, m }) => {\n  const [hours, setHours] = useState(h);\n  const [minutes, setMinutes] = useState(m);\n\n  const adjust = which => amount => e => {\n    e.preventDefault();\n    if (which === 'h') {\n      const value = hours + amount;\n      if (value >= 0 && value < 25) {\n        setHours(hours + amount);\n      }\n    } else {\n      const value = minutes + amount;\n      if (value >= 0 && value < 60) {\n        setMinutes(minutes + amount);\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className=\"time-picker mt-4 mb-4\">\n        <div>\n          <button onClick={adjust('h')(-1)} className=\"button mr-4\">-</button>\n          <button onClick={adjust('h')(1)} className=\"button\">+</button>\n        </div>\n        <div>{hours} hrs {minutes} min</div>\n        <div>\n          <button onClick={adjust('m')(-15)} className=\"button mr-4\">-</button>\n          <button onClick={adjust('m')(15)} className=\"button\">+</button>\n        </div>\n      </div>\n      <SliderScale scale={['subtract/add hours', 'subtract/add minutes']} />\n      <input type=\"hidden\" name=\"sleepHours\" defaultValue={`${hours + minutes/60}`} />\n    </>\n  );\n}\n\nconst getInput = (type, { field, scale }) => {\n  switch (type) {\n    case 'slider':\n      return (\n        <>\n          <input\n            id={field}\n            name={field}\n            defaultValue={getDefaultValue(field)}\n            className=\"slider is-warning is-fullwidth is-large mt-2\"\n            step=\".25\"\n            min=\"0\"\n            max=\"10\"\n            type=\"range\"/>\n          <SliderScale scale={scale} />\n        </>\n      );\n    case 'time':\n      const time = getDefaultValue(field);\n      let [h, m] = time.split('.');\n      h = h || 8;\n      m = m || 0;\n      return <TimePicker h={Number(h)} m={Number(`.${m}`)*60} />;\n    case 'text':\n    default:\n      return (\n        <input\n          className=\"input mb-4\"\n          id={field}\n          name={field}\n          defaultValue={getDefaultValue(field)}\n          type={type || 'text'}/>\n      );\n  }\n}\n\nexport default function Tform({ onSubmit }) {\n  const [redirect, setRedirect] = useState(false);\n\n  const submitHandler = (e) => {\n    onSubmit(e).then(setRedirect);\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/lift\" />;\n  }\n\n  return (\n    <div className=\"px-4 py-4\">\n      <div>\n        <form onSubmit={submitHandler}>\n          {LS.items.map(({ label, field, type, scale }) => (\n            <div key={field} id={`${field}-wrapper`}>\n              {type !== 'hidden' && <label htmlFor={field}>{label}</label>}\n              {getInput(type, { field, scale })}\n            </div>\n          ))}\n          <div className=\"has-text-centered\">\n            <input className=\"button is-black\" type=\"submit\" value=\"Next\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n// {\n//   LS.items.map(({ field }) =>\n//   <div key={field}>{field}: {LS.getItem(field)}</div>\n// )\n// }\n","import { v4 as uuid } from 'uuid';\nimport LS from './ls';\n\nconst DEFAULTS = {\n  name: 'unspecified',\n  age: 'unspecified',\n};\n\n// const lsData = () => LS.items.map(({ field }) => ({ [field]: LS.getItem(field) || DEFAULTS[field] }));\n\nconst lsData = () => LS.items.reduce((acc, curr) => {\n  const { field } = curr;\n  return {\n    [field]: LS.getItem(field) || DEFAULTS[field],\n    ...acc,\n  }\n}, {});\n\nexport function liftItem(data) {\n  const {\n    id = uuid(),\n    timestamp = Date.now(),\n    winNavUa = window.navigator.userAgent,\n  } = data;\n\n  return {\n    id,\n    timestamp,\n    winNavUa,\n    ...lsData(),\n    ...data,\n  };\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Pressure from 'pressure';\nimport LS from './ls';\nimport { liftItem } from './items';\nimport { putItemInTable } from './db';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst DEFAULTS = {\n  ctext: 'Press',\n}\nconst DELAY = 1500;\nconst SAMPLE_SIZE = 5;\n\nfunction Lift({ history }) {\n  const [ctext, setCtext] = useState(DEFAULTS.ctext);\n  const [clicks, setClicks] = useState([]);\n  const [active, setActive] = useState(false);\n  const [res, setRes] = useState(false);\n  const [pressed, setPressed] = useState(false);\n  const [triggered, setTriggered] = useState(false);\n  const liftTimer = useRef(null);\n  const maxForce = useRef(0);\n\n  useEffect(() => {\n    Pressure.set('#circle', {\n      start: () => {\n        maxForce.current = 0;\n      },\n      change: force => {\n        maxForce.current = force > maxForce.current ? force : maxForce.current;\n      },\n      unsupported: function(){\n        maxForce.current = -1;\n      },\n    }, {\n      only: 'touch',\n      polyfill: false,\n    });\n  }, []);\n\n  const save = () => {\n    const items = [];\n    const timeStamp = Date.now();\n    for (let i = 0; i < clicks.length; i += 2) {\n      items.push(new Promise((resolve, reject) => {\n        const item = liftItem({\n            timeStamp,\n            trigger: clicks[i].timeStamp,\n            lift: clicks[i+1].timeStamp,\n            pressure: clicks[i+1].pressure,\n          });\n        putItemInTable(item, 'lift').then(resolve).catch(reject);\n      }));\n    }\n    return Promise.all(items);\n  }\n\n  const reset = () => {\n    save().finally(() => {\n      const speed = clicks.reduce((acc, cur, idx, arr) => {\n        if ((idx % 2)) return acc;\n        return [...acc, arr[idx + 1].timeStamp - cur.timeStamp];\n      }, []);\n      history.push(`/results?speed=${speed}`)\n    });\n  }\n\n  useEffect(() => {\n    const rand = DELAY + Math.round(Math.random() * 250);\n    if (pressed) {\n      liftTimer.current = setTimeout(() => {\n        setTriggered(true);\n        setClicks(c => [\n          ...c,\n          { timeStamp: Date.now() },\n        ]);\n      }, rand);\n    }\n  }, [pressed]);\n\n  useEffect(() => {\n    if (clicks.length === SAMPLE_SIZE * 2) {\n      setRes(true);\n      reset();\n    }\n  }, [clicks]);\n\n  const pointerDown = (e) => {\n    if (ctext !== DEFAULTS.ctext) {\n      return;\n    }\n    setActive(true);\n    setPressed(true);\n  }\n\n  const pointerUp = (e) => {\n    setPressed(false);\n    if (!active || ctext !== DEFAULTS.ctext) {\n      return;\n    }\n    if (!triggered) {\n      setCtext('!');\n      clearTimeout(liftTimer.current);\n    } else {\n      setCtext('Good');\n      setClicks([\n        ...clicks,\n        {\n          timeStamp: Date.now(),\n          pressure: maxForce.current,\n        },\n      ]);\n    }\n    setActive(false);\n    setTriggered(false);\n    setTimeout(() => setCtext(DEFAULTS.ctext), DELAY);\n  }\n\n  if (!LS.isValid()) {\n    history.push('/');\n  }\n\n  return (\n    <div className=\"px-4 py-4\">\n      <div className=\"mb-4\">\n        Press with your thumb.\n        When the border turns red, lift your thumb.\n        Repeat five times.\n      </div>\n      <section\n        className={`section py-0 lift`}\n        style={{\n          position: 'absolute',\n          bottom: 30,\n          left: '50%',\n          transform: 'translate(-50%)',\n        }}\n      >\n        {res ? (\n          <div className=\"circle\">\n            <FontAwesomeIcon spin size=\"1x\" icon={faSpinner} />\n          </div>\n        ) : (\n          <div\n            id=\"circle\"\n            className={`circle ${pressed && 'pressed'} ${triggered && 'triggered'}`}\n            onPointerDown={pointerDown}\n            onPointerUp={pointerUp}\n          >\n            {ctext}\n          </div>\n        )}\n      </section>\n    </div>\n  );\n}\n// {res && <Results clicks={clicks} reset={reset} />}\n\nexport default withRouter(Lift);\n","const keys = [0,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3,3.25,3.5,3.75,4,4.25,4.5,4.75,5,5.25,5.5,5.75,6,6.25,6.5,6.75,7,7.25,7.5,7.75,8,8.25,8.5,8.75,9,9.25,9.5,9.75,10];\nconst motivated = [0,2.5,3.125,3.75,4.375,5,5.625,6.25,6.875,7.5,8.125,8.75,9.375,10,10.625,11.25,11.875,12.5,13.125,13.75,14.375,15,15.625,16.25,16.875,17.5,18.125,18.75,19.375,20,20.625,21.25,21.875,22.5,23.125,23.75,24.375,25];\nconst fast = [0,2.5,3.125,3.75,4.375,5,5.625,6.25,6.875,7.5,8.125,8.75,9.375,10,10.625,11.25,11.875,12.5,13.125,13.75,14.375,15,15.625,16.25,16.875,17.5,18.125,18.75,19.375,20,20.625,21.25,21.875,22.5,23.125,23.75,24.375,25];\nconst sleep = [0,2.5,3.125,3.75,4.375,5,5.625,6.25,6.875,7.5,8.125,8.75,9.375,10,10.625,11.25,11.875,12.5,13.125,13.75,14.375,15,15.625,16.25,16.875,17.5,18.125,18.75,19.375,20,20.625,21.25,21.875,22.5,23.125,23.75,24.375,25];\nconst sleepHours = [0,1,1.05,1.1,1.15,1.2,1.25,1.3,1.35,1.45,1.6,1.95,2.5,3.3,4.2,5.2,6.3,7.5,8.8,10.2,11.7,13.45,15.2,16.95,18.45,19.7,20.95,22.2,23.2,23.95,24.45,24.75,24.9,25,25,25,25,25];\n\nconst build = type => type.reduce((acc, cur, idx) => ({\n    ...acc,\n    [keys[idx]]: cur,\n  }), {});\n\nexport default {\n  motivated: build(motivated),\n  fast: build(fast),\n  sleep: build(sleep),\n  sleepHours: build(sleepHours),\n};\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport LS from './ls';\nimport table from './table';\n\nfunction Results({ location: { search }}) {\n  const readiness = ['motivated', 'fast', 'sleep', 'sleepHours'].reduce((acc, cur) => {\n    return acc + table[cur][LS.getItem(cur)];\n  }, 0);\n\n  const speed = search.split('=')[1].split(',').sort();\n  if (speed.length === 5) { speed.pop(); speed.shift(); }\n  const avgSpeed = speed.reduce((acc, cur) => Number(acc) + Number(cur), 0)/speed.length;\n\n  return (\n    <section className=\"section\">\n      <article className=\"message is-info\">\n        <div className=\"message-header\">\n          <p>HIIT readiness</p>\n        </div>\n        <div className=\"message-body\">\n          {readiness}%\n        </div>\n      </article>\n      <article className=\"message is-info\">\n        <div className=\"message-header\">\n          <p>Reaction score</p>\n        </div>\n        <div className=\"message-body\">\n          {Math.round(avgSpeed)} ms\n        </div>\n      </article>\n      <div className=\"has-text-centered\">\n        <Link to=\"/\"><button className='button is-black'>Done</button></Link>\n      </div>\n    </section>\n  );\n}\n\nexport default withRouter(Results);\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport LS from './ls';\nimport Data from './Data';\nimport Stepper from './Stepper';\nimport Tform from './Tform';\nimport Lift from './Lift';\nimport Results from './Results';\n\nexport default function App() {\n\n  const onSubmit = e => {\n    e.preventDefault();\n    return new Promise(resolve => {\n      LS.items.forEach(({ field }) => {\n        const value = (e.target[field].value || '').trim();\n        LS.setItem(field, value);\n      });\n      const valid = LS.isValid();\n      // setIsValid(valid);\n      if (valid) {\n        setTimeout(() => window.scrollTo(0,0), 500);\n        resolve(true);\n      }\n      resolve(false);\n    });\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path=\"/data/:table(lift)\"\n          render={rp => <Data rp={rp} />}\n        />\n        <Route>\n          <Stepper />\n          <Switch>\n            <Route path=\"/today\">\n              <Tform onSubmit={onSubmit} />\n            </Route>\n            <Route path=\"/lift\">\n              <Lift />\n            </Route>\n            <Route path=\"/results\">\n              <Results />\n            </Route>\n            <Route>\n              <Redirect to=\"/today\" />\n            </Route>\n          </Switch>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener(\"contextmenu\", function(e) { e.preventDefault(); })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}